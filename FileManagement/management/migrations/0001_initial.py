# Generated by Django 5.2.6 on 2025-09-22 07:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name/नाव')),
                ('mobile_no', models.CharField(max_length=15, verbose_name='Mobile Number/मोबाईल नंबर')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email/ईमेल')),
                ('address', models.TextField(verbose_name='Address/पत्ता')),
                ('aadhar_no', models.CharField(max_length=12, unique=True, verbose_name='Aadhar Number/आधार कार्ड नंबर')),
                ('pancard_no', models.CharField(max_length=10, unique=True, verbose_name='PAN Card Number/पॅन कार्ड नंबर')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Date/तारीख')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Date/अद्ययावत तारीख')),
            ],
            options={
                'verbose_name': 'Client/क्लायंट',
                'verbose_name_plural': 'Clients/क्लायंट',
            },
        ),
        migrations.CreateModel(
            name='MasterDrawer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drawer_number', models.CharField(max_length=50, unique=True, verbose_name='Drawer Number')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Master Drawer',
                'verbose_name_plural': 'Master Drawers',
                'ordering': ['drawer_number'],
            },
        ),
        migrations.CreateModel(
            name='MasterWard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ward_name', models.CharField(max_length=50)),
                ('ward_number', models.CharField(max_length=50)),
                ('description', models.TextField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('division', models.CharField(choices=[('Mumbai', 'Mumbai'), ('Pune', 'Pune'), ('Nagpur', 'Nagpur'), ('Nashik', 'Nashik'), ('Aurangabad', 'Aurangabad'), ('Amravati', 'Amravati'), ('Konkan', 'Konkan')], max_length=50, verbose_name='विभाग / Division')),
                ('district', models.CharField(max_length=100, verbose_name='जिल्हा / District')),
                ('taluka', models.CharField(max_length=100, verbose_name='तालुका / Taluka')),
                ('village', models.CharField(max_length=100, verbose_name='गाव / Village')),
                ('full_name', models.CharField(max_length=150, verbose_name='पूर्ण नाव / Full Name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='ईमेल / Email')),
                ('mobile_number', models.CharField(max_length=15, verbose_name='मोबाइल नंबर / Mobile Number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Compartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compartment_number', models.CharField(max_length=50, verbose_name='Compartment Number')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('drawer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compartments', to='management.masterdrawer', verbose_name='Drawer')),
            ],
            options={
                'verbose_name': 'Compartment',
                'verbose_name_plural': 'Compartments',
                'ordering': ['drawer', 'compartment_number'],
                'unique_together': {('drawer', 'compartment_number')},
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_no', models.CharField(max_length=100, verbose_name='सर्वे क्रमांक / Survey No.')),
                ('address', models.TextField(verbose_name='पत्ता / Address')),
                ('sqft_area', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='चौरस फुट क्षेत्र / Sqft Area')),
                ('construction_type', models.CharField(max_length=100, verbose_name='बांधकाम प्रकार / Construction Type')),
                ('construction_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='बांधकाम वर्ष / Construction Year')),
                ('file_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='फाईल क्रमांक / File No.')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='टिप्पण्या / Remarks')),
                ('document_file', models.FileField(blank=True, null=True, upload_to='documents/properties/', verbose_name='फाइल / File')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ward', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='management.masterward', verbose_name='वार्ड / Ward')),
            ],
            options={
                'verbose_name': 'Property',
                'verbose_name_plural': 'Properties',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RevenueSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nagar_bhumapan_kramank', models.CharField(max_length=100, verbose_name='नगर भूमापन क्रमांक / City Survey Number')),
                ('seat_no', models.CharField(max_length=50, verbose_name='सीट क्रमांक / Seat Number')),
                ('plot_no', models.CharField(max_length=50, verbose_name='प्लॉट क्रमांक / Plot Number')),
                ('square_feet', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='चौरस फुट / Square Feet')),
                ('dharna_dhikhar', models.CharField(max_length=100, verbose_name='धरणा धिकार / Ownership Type')),
                ('file_no', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='फाईल क्रमांक / File Number')),
                ('registration_date', models.DateField(auto_now_add=True, verbose_name='नोंदणी तारीख / Registration Date')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='टिप्पण्या / Remarks')),
                ('division', models.CharField(blank=True, choices=[('Mumbai', 'Mumbai'), ('Pune', 'Pune'), ('Nagpur', 'Nagpur'), ('Nashik', 'Nashik'), ('Aurangabad', 'Aurangabad'), ('Amravati', 'Amravati'), ('Konkan', 'Konkan')], max_length=50, null=True, verbose_name='विभाग / Division')),
                ('district', models.CharField(max_length=100, verbose_name='जिल्हा / District')),
                ('taluka', models.CharField(max_length=100, verbose_name='तालुका / Taluka')),
                ('village', models.CharField(max_length=100, verbose_name='गाव / Village')),
                ('full_name', models.CharField(max_length=150, verbose_name='पूर्ण नाव / Full Name')),
                ('email', models.EmailField(max_length=254, verbose_name='ईमेल / Email')),
                ('mobile_number', models.CharField(max_length=15, verbose_name='मोबाइल नंबर / Mobile Number')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='अंतिम अद्यतन / Last Updated')),
                ('document_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='दस्तऐवजाचे शीर्षक / Document Title')),
                ('document_file', models.FileField(blank=True, null=True, upload_to='documents/revenue_sites/', verbose_name='फाइल / File')),
                ('document_uploaded_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='अपलोड तारीख / Upload Date')),
                ('compartment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='management.compartment', verbose_name='कंपार्टमेंट / Compartment')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_sites', to=settings.AUTH_USER_MODEL)),
                ('drawer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='management.masterdrawer', verbose_name='ड्रॉवर / Drawer')),
                ('ward', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='management.masterward', verbose_name='वार्ड / Ward')),
            ],
            options={
                'verbose_name': 'रेव्हेन्यू साइट / Revenue Site',
                'verbose_name_plural': 'रेव्हेन्यू साइट्स / Revenue Sites',
            },
        ),
    ]
